// * Copyright (c) 2015, 2018 Cirrus Link Solutions and others
// *
// * This program and the accompanying materials are made available under the
// * terms of the Eclipse Public License 2.0 which is available at
// * http://www.eclipse.org/legal/epl-2.0.
// *
// * SPDX-License-Identifier: EPL-2.0
// *
// * Contributors:
// *   Cirrus Link Solutions - initial implementation

//
// To compile:
// cd client_libraries/java
// protoc --proto_path=../../ --java_out=src/main/java ../../sparkplug_b.proto
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: internal/proto/sparkplug_b.proto

package sparkplug_b

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 仅保留核心结构，完整内容请参考官方 https://github.com/eclipse/tahu/blob/main/sparkplug_b/sparkplug_b.proto
type Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Seq           uint64                 `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	Metrics       []*Metric              `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Payload) Reset() {
	*x = Payload{}
	mi := &file_internal_proto_sparkplug_b_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_sparkplug_b_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_internal_proto_sparkplug_b_proto_rawDescGZIP(), []int{0}
}

func (x *Payload) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Payload) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Payload) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type Metric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Datatype      int32                  `protobuf:"varint,2,opt,name=datatype,proto3" json:"datatype,omitempty"`
	DoubleValue   float64                `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,proto3" json:"double_value,omitempty"`
	IntValue      int64                  `protobuf:"varint,4,opt,name=int_value,json=intValue,proto3" json:"int_value,omitempty"`
	StringValue   string                 `protobuf:"bytes,5,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metric) Reset() {
	*x = Metric{}
	mi := &file_internal_proto_sparkplug_b_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_sparkplug_b_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_internal_proto_sparkplug_b_proto_rawDescGZIP(), []int{1}
}

func (x *Metric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metric) GetDatatype() int32 {
	if x != nil {
		return x.Datatype
	}
	return 0
}

func (x *Metric) GetDoubleValue() float64 {
	if x != nil {
		return x.DoubleValue
	}
	return 0
}

func (x *Metric) GetIntValue() int64 {
	if x != nil {
		return x.IntValue
	}
	return 0
}

func (x *Metric) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

var File_internal_proto_sparkplug_b_proto protoreflect.FileDescriptor

const file_internal_proto_sparkplug_b_proto_rawDesc = "" +
	"\n" +
	" internal/proto/sparkplug_b.proto\x12\vsparkplug_b\"h\n" +
	"\aPayload\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x10\n" +
	"\x03seq\x18\x02 \x01(\x04R\x03seq\x12-\n" +
	"\ametrics\x18\x03 \x03(\v2\x13.sparkplug_b.MetricR\ametrics\"\x9b\x01\n" +
	"\x06Metric\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bdatatype\x18\x02 \x01(\x05R\bdatatype\x12!\n" +
	"\fdouble_value\x18\x03 \x01(\x01R\vdoubleValue\x12\x1b\n" +
	"\tint_value\x18\x04 \x01(\x03R\bintValue\x12!\n" +
	"\fstring_value\x18\x05 \x01(\tR\vstringValueB+Z)sparkplug-edge/internal/proto/sparkplug_bb\x06proto3"

var (
	file_internal_proto_sparkplug_b_proto_rawDescOnce sync.Once
	file_internal_proto_sparkplug_b_proto_rawDescData []byte
)

func file_internal_proto_sparkplug_b_proto_rawDescGZIP() []byte {
	file_internal_proto_sparkplug_b_proto_rawDescOnce.Do(func() {
		file_internal_proto_sparkplug_b_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_proto_sparkplug_b_proto_rawDesc), len(file_internal_proto_sparkplug_b_proto_rawDesc)))
	})
	return file_internal_proto_sparkplug_b_proto_rawDescData
}

var file_internal_proto_sparkplug_b_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_internal_proto_sparkplug_b_proto_goTypes = []any{
	(*Payload)(nil), // 0: sparkplug_b.Payload
	(*Metric)(nil),  // 1: sparkplug_b.Metric
}
var file_internal_proto_sparkplug_b_proto_depIdxs = []int32{
	1, // 0: sparkplug_b.Payload.metrics:type_name -> sparkplug_b.Metric
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_internal_proto_sparkplug_b_proto_init() }
func file_internal_proto_sparkplug_b_proto_init() {
	if File_internal_proto_sparkplug_b_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_proto_sparkplug_b_proto_rawDesc), len(file_internal_proto_sparkplug_b_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_proto_sparkplug_b_proto_goTypes,
		DependencyIndexes: file_internal_proto_sparkplug_b_proto_depIdxs,
		MessageInfos:      file_internal_proto_sparkplug_b_proto_msgTypes,
	}.Build()
	File_internal_proto_sparkplug_b_proto = out.File
	file_internal_proto_sparkplug_b_proto_goTypes = nil
	file_internal_proto_sparkplug_b_proto_depIdxs = nil
}
